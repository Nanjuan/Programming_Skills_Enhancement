Todo list (web interface, python to read excel spreadsheet) 

https://medium.com/@diogo.fg.pinheiro/simple-to-do-list-app-with-node-js-and-mongodb-chapter-1-c645c7a27583

https://www.nylas.com/blog/use-python-requests-module-rest-apis/

https://www.linkedin.com/pulse/testing-rest-apis-using-python-excel-suresh-parimi

Excel -> python -> json ->  Node.js -> html/css -> browser

https://stackabuse.com/reading-and-writing-json-files-with-node-js/

 temp = datetime.date(1899, 12, 30)
    xldate = (db.ws(ws='Sheet1').address(address='C2'))
    dateCreated = temp+datetime.timedelta(days=xldate)
    print(dateCreated)

CLass define the object 
class is a overview like a blueprint of what we going to build can be used multiple times to create something


Onject in this case is a row 

naming CLass have a rules on python research 
google this python using class

Split date with time 
https://stackoverflow.com/questions/48101607/removing-time-from-datetime-and-insert-into-db-table-using-python
convert to date
https://xlrd.readthedocs.io/en/latest/api.html?highlight=datetime#xlrd.xldate.xldate_from_datetime_tuple
https://stackoverflow.com/questions/32430679/how-to-read-dates-using-xlrd/32430739

for regex on date
https://stackoverflow.com/questions/4709652/python-regex-to-match-dates
https://www.tutorialspoint.com/python3/python_reg_expressions.htm

tuple 

array 

nested if staement validation 

signature is the class value order 

Create the ERD of the database done

create data base squema done

then have a python load to enter data into database done

completion is boolen done

work on duedate convertion and validation  done 
work on boolen for completion done 

Change the PK to auto generate done
change the data type of the ERD 
add not null done 


MAKE THE UDPATE IN PHYTHON FIRST THEN MOVE TO NODEJS used the flow chart created

Make the drop down happen for started not started

Make the comments fields editable

Able to add and delete from the rows 

use node js to use python 
Create a node js program that get a value from the URL parameter on a ger url/?here to print that value on the screen. = done 

Create a small POC to handle the data commiung in and out before going into database. The objective is that the squeleton is wokring before we get to bigger data. = done 

On Python 
1) Read all the lines and extract the title to the console 
2) Let the user select one of the title 
3) show the content of each field on the task 
4) let the user select the field they want to edit 
5) allow the user to edit the file and save it back to the database 

Need to display the table with all the data then have a button that when click redirect the user to the edit page where they able to edit the task then redirect back to the main page with the new record and all records 

Need to work on the edit page to display a simple hello word to test the redirect back and forwarded. 







